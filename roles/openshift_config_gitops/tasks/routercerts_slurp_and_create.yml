---
- name: Slurp router certificate
  register: router_cert_certfile_content
  when:
    - router.cert_content is not defined
  ansible.builtin.slurp:
    src: "{{ router.certfile }}"

- name: Set router_cert_content from file
  when:
    - router.cert_content is not defined
  ansible.builtin.set_fact:
    router_cert_content: "{{ router_cert_certfile_content.content | b64decode }}"

- name: Set router_cert_content from inventory
  when:
    - router.cert_content is defined
  ansible.builtin.set_fact:
    router_cert_content: "{{ router.cert_content }}"

- name: Slurp router keyfile
  register: router_cert_keyfile_content
  when:
    - router.key_content is not defined
  ansible.builtin.slurp:
    src: "{{ router.keyfile }}"

- name: Set router_key_content from file
  when:
    - router.key_content is not defined
  ansible.builtin.set_fact:
    router_key_content: "{{ router_cert_keyfile_content.content | b64decode }}"

- name: Set router_key_content from inventory
  when:
    - router.key_content is defined
  ansible.builtin.set_fact:
    router_key_content: "{{ router.key_content }}"

- name: Configure custom router cert secrets
  vars:
    secret_template: "{{ lookup('template', 'ingress/router-certs.yml.j2') | from_yaml }}"
    apply_to_cluster: false
    sealed_secret_file: "{{ openshift_gitops_dir }}/ingress/assets/custom-router-certs-{{ router.name }}.yaml"
  ansible.builtin.include_tasks: create_sealed_secret.yml
